" configure generic file handling
filetype on         " enable filetype detection
filetype plugin on  " enable filetype plugins

" configure indentation and tab behavior
set autoindent      " use indentation of previous line
set smartindent     " use intelligent indentation for C
set tabstop=4
set softtabstop=4   " tab width is 4 spaces
set shiftwidth=4   " indent also with 4 spaces
set expandtab       " expand tabs to spaces
set textwidth=80    " wrap lines at 80 chars

" configure colors
set t_Co=256        " use 256 terminal colors
syntax on           " turn syntax highlighting on
" colorscheme wombat  " set colorscheme
" colorscheme desert  " set colorscheme
colorscheme jellybeans  " set colorscheme
" colorscheme inkpot  " set colorscheme

" misc options
set showmatch       " highlight matching braces
set vb t_vb=        " disable beeps on error
set ruler           " line,column display at bottom of screen
set incsearch       " enable incremental search while typing
set number          " turn line numbers on
set wrap linebreak textwidth=0 "ensures no implicit linebreaks
set nocp            " forget about compatibility with old version of vi

" let Tlist_Ctags_Cmd='/usr/local/bin/ctags'

" configure shortcuts/hotkeys
" switch between header/source with F4
map <F4> :e %:p:s,.hh$,.X123X,:s,.cc$,.hh,:s,.X123X$,.cc,<CR>
" recreate tags file with F5
map <F5> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" create doxygen function/method comment with F6
map <F6> :Dox<CR>
" create doxygen class comment with F7
map <F7> :DoxAuthor<CR>
" goto definition with F12
map <F12> <C-]>

" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
" auto close options when exiting insert mode
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
" menu behavior menu = ?, menuone = menu even if for only one match
set completeopt=menuone,menu,longest,preview
autocmd FileType python set omnifunc=pythoncomplete#Complete

" exuberant tag options
set tags+=./tags                       " add local tags
set tags+=~/.vim/tags/trading          " trading repo tags
" set tags+=~/.vim/tags/cpp              " add cstd++ tags
" set tags+=~/.vim/tags/boost_asio       " add boost asio tags
" set tags+=~/.vim/tags/boost_bind       " add boost bind tags
" set tags+=~/.vim/tags/boost_filesystem " add boost filesystem tags
" set tags+=~/.vim/tags/boost_function   " add boost function tags
" set tags+=~/.vim/tags/boost_graph      " add boost graph tags
" set tags+=~/.vim/tags/boost_numeric    " add boost numeric tags
" set tags+=~/.vim/tags/boost_random     " add boost random tags
" set tags+=~/.vim/tags/boost_smart_ptr  " add boost smart_ptr tags
" set tags+=~/.vim/tags/boost_thread     " add boost thread tags

"Kyle additions
set mouse=a
set hlsearch "highlight all instances of searched for pattern

" automatic doxygene commenting options
let g:DoxygenToolkit_authorName="Antonio Manuel Abad"

" python file handling
au BufNewFile,BufRead *.py set filetype=python
let g:pydiction_location = '/Users/tony/.vim/after/ftplugin/pydiction/complete-dict'
